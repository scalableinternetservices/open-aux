continue
conitnue
helpers.getSongsFromAPI(params[:q])
@trackList
next
@trackList
continue
res.body
res
continue
session[:userId]
res
continue
next
quit
next
User.find_by(id: 10)
user.find_by(id: 10)
@user
next
@user
quit
@user.errors
User
quit
@user.errors
@user.save
User.find_by(id: 10)
quit
@user.errors.full_messages
@user.update(accessToken: authParams['access_token'], refreshToken: authParams['refresh_token'])
User
User.all
@user.errors.full_messages
user.errors.full_messages
@user.update(accessToken: authParams['access_token'], refreshToken: authParams['refresh_token'])
continue
user.update(accessToken: authParams['access_token'], refreshToken: authParams['refresh_token'])user.
user
user = User.find_by(id: 10)
User.find_by(id: 10)
next
@user
quit
user.update(accessToken: authParams['access_token'], refreshToken: authParams['refresh_token'])
user = User.find_by(id: session[:userId])
User.find_by(id: 10)
next
@user
@user.save
@user
authParams['refresh_token']
authParams['access_token']
quit
User.find_by(id: session[:userId])
user.find_by(id: session[:userId])
next
continue
User.find_by(id: session[:userId])
quit
session[:userId]
next
quit
sesssion[:userId]
next
user.id
quit
res.body
next
nex
continue
Rails.application.credentials.spotify[:client_secret]
Rails.application.credentials.spotify[:client_id]
params[:code]
res.body
next
continue
Net::HTTP.post_form(uri, grant_type: 'authorization_code', code: params[:code], redirect_uri: 'http://localhost:3000/user/auth', client_id: Rails.application.credentials.spotify[:client_id], client_secret: Rails.application.credentials.spotify[:client_secret])
res.body
next
continue
res.body
next
uri
next
uri
params[:code]
params
continue
params
next
params
params[:code]
params
continue
    )continue
    :client_secret => Rails.application.credentials.spotify[:client_secret],
    :client_id => Rails.application.credentials.spotify[:client_id],
    :redirect_uri => 'http://localhost:3000/user/auth',
    :code => params[:code],
    :grant_type => 'authorization_code',
    res = Net::HTTP.post_form(uri, 
URI('https://accounts.spotify.com/api/token')
res.body
continue
res.body
quit
    )quit
    'client_secret' => Rails.application.credentials.spotify[:client_secret],
    'client_id' => Rails.application.credentials.spotify[:client_id],
    'redirect_uri' => 'http://localhost:3000/user/auth',
    'code' => params[:code],
    'grant_type' => 'authorization_code',
    res = Net::HTTP.post_form(uri, 
    )
    'client_secret' => Rails.application.credentials.spotify[:client_secret],
    'client_id' => Rails.application.credentials.spotify[:client_id],
    'redirect_uri' => 'http://localhost:3000/user/auth',
    'code' => params[:code],
    'grant_type' => 'authorization_code',
    res = Net::HTTP.post_form(uri, 
Rails.application.credentials.spotify[:client_secret]
Rails.application.credentials.spotify[:client_id]
res.body
continue
res.body
continue
res.body
continue
next
continue
RSpotify::User.new(request.env['omniauth.auth']).id
RSpotify::User.new(request.env['omniauth.auth'])['id']
session[:hostUser]
user
RSpotify::User.new(request.env['omniauth.auth'])['id']
RSpotify::User.new(request.env['omniauth.auth'])[@id]
RSpotify::User.new(request.env['omniauth.auth'])[:id]
RSpotify::User.new(request.env['omniauth.auth'])
session[:hostUser]['id']
session[:hostUser][:@id]
session[:hostUser].get('id)
session[:hostUser].find('id)
session[:hostUser][:id]
session[:hostUser].id
continue
session[:hostUser]['id']
session[:hostUser]
continue
conitnue
continue
next
nxt
next
continue
user
user = RSpotify::User.new(request.env['omniauth.auth'])
quit
RSpotify.client_token
user.authenticate
user.credentials
user
User
User.credentials
user.player
user
user = RSpotify::User.find('22hoeq7p2cuju6rcyqmsrfcba')
continue
RSpotify::User.find('22hoeq7p2cuju6rcyqmsrfcba')
RSpotify::User.find('han lee')
RSpotify::User.find('wizzler')
RSpotify::User.find('af667ed038f04c8cb5804570c3ca2c43')
RSpotify.authenticate("af667ed038f04c8cb5804570c3ca2c43", "99dcf1d0dd8544dd95344ed1f37f3c4d")
RSpotify::User.player
RSpotify::User
RSpotify::User.initialize
continue
RSpotify::User.initialize {}
RSpotify::User.initialize options={}
RSpotify::User
RSpotify.initialize
RSpotify::initialize
RSpotify::User.initialize
RSpotify.initialize
continue
currUser
continue
@trackList
continue
params[:q]
continue
params[:q]
continue
quit
password1
password1.email
password1.id
password1.password_digest
password1 = User.where(email: 'test1@gmail.com')
User.where(email: 'test1@gmail.com').password_digest
User.where(email: 'test1@gmail.com')
User.where(email: test1@gmail.com)
User.all
User
playlist_params
User.where(password_digest: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.password_digest.find_by(password_dist: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.find_by(password_dist: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.find_by(password_dist: r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==)
User
@User
params
continue
params
playlist
:playlist
continue
@playlist
continue
@playlist
playlists_urlname
test
exit
User.count
User.find(6)
