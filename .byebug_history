continue
PlaylistSong.where(hashed_id: session[:hashed_id], song_id: session[:currentSongId]).first
PlaylistSong.where(hashed_id: session[:hashed_id], song_id: session[:currentSongId])
continue
@songs.destroycontinue
@songs
@songs[0]
continue
@hashed_id
session
session[:currentSongId]
session[:hashed_id]
continue
session[:hashed_id]
continue
session[:hashed_id]
continue
session[:hashed_id]
session[hashed_id]
@hashed_id
session[:hashed_id]
PlaylistSong.where(hashed_id: session[:hashed_id])
PlaylistSong.where(hashed_id: session[:hashed_id], song_id: session[:currentSongId])
PlaylistSong.where(hashed_id: session[:hashed_id], song_id: session[:currentSongId]).order('vote_count DESC').first
@songs
continue
PlaylistSong
Song.joins(:playlist_songs).where(playlist_songs:{hashed_id: session[:hashed_id] }).order('vote_count DESC')
Song.joins(:playlist_songs).where(playlist_songs:{hashed_id: session[:hashed_id] }).select("songs.*, playlist_songs.vote_count").order('vote_count DESC')
@songs[0]
continue
@songs[0].id
@songs[0]
@songs[0[
@songs
continue
@firstVisit
continue
next
@firstVisit
continue
conitnue
firstVisit
continue
firstVisit
firstvisit
continue
!this.state.paused && state.paused
!this.state.paused
state.paused && state.paused
state.paused
@trackId
continue
next
continue
state.paused
state
this.state
                && !this.state.paused
                && state.track_window.previous_tracks.find(x => x.id === state.track_window.current_track.id)
                this.state
@trackId
next
@trackId
continue
@trackId
continue
PlaylistSong.where(hashed_id: session[:hashed_id], id: trackThatEnded)
trackThatEnded
PlaylistSong.where(hashed_id: session[:hashed_id])
PlaylistSong.where(hashed_id: session[:hashed_id]).
@songsInPlaylist[0].update(vote_count: -500)
PlaylistSong.where(hashed_id: session[:hashed_id]).pluck(trackThatEnded)
PlaylistSong.where(hashed_id: session[:hashed_id])
@songsInPlaylist
continue
PlaylistSong.where(hashed_id: @hashed_id).order('vote_count DESC').first.id
PlaylistSong.where(hashed_id: @hashed_id)
PlaylistSong.where(hashed_id: @hashed_id).select("songs.*, PlaylistSong.vote_count").order('vote_count DESC').first.id
PlaylistSong.where(hashed_id: @hashed_id).select("songs.*, PlaylistSong.vote_count")
PlaylistSong.where(hashed_id: @hashed_id)
PlaylistSong.where
Song.joins(:playlist_songs).where(playlist_songs:{hashed_id:@hashed_id }).select("songs.*, playlist_songs.vote_count").order('vote_count DESC').first.spotify_id
@trackId
continue
User.find_by(email: params[:session][:email].downcase)
user.authenticate(params[:session][:password])
user
continue
conntinue
@user
continue
user
continue
user
next
continue
next
continue
@temp[0].update(vote_count: -500)
@temp[0].
@temp.update(vote_count: -500)
@temp
continue
@temp
next
@temp
continue
Song.find(@songsInPlaylist)
Song.find(@songsInPlaylist).select {|i| i.spotify_id == trackThatEnded }
@songsInPlaylist
continue
next
continue
trackThatEnded
continue
nextcontinue
next
@trackId[1]
@trackId
continue
contine
continue
next
continue
@trackId
continue
"#{url}?#{query.to_query}"
continue
@accessToken
token
continue
@trackId
next
@trackId
continue
Song.where( id: PlaylistSong.where(hashed_id: @hashed_id).pluck(:song_id) ).order('vote_count DESC').first.spotify_id
Song.where( id: PlaylistSong.where(hashed_id: @hashed_id).pluck(:song_id) ).order('vote_count DESC').first
Song.where( id: PlaylistSong.where(hashed_id: @hashed_id).pluck(:song_id) ).order('vote_count DESC')
session[:playlistID]
session[:playlistId]
session[:playlist]
session
User
continue
@trackList
continue
@trackList
continue
@trackList
trackList
continue
trackList
continue
@trackList
continue
params[:q]
continue
params[:q]
continue
quit
password1
password1.email
password1.id
password1.password_digest
password1 = User.where(email: 'test1@gmail.com')
User.where(email: 'test1@gmail.com').password_digest
User.where(email: 'test1@gmail.com')
User.where(email: test1@gmail.com)
User.all
User
playlist_params
User.where(password_digest: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.password_digest.find_by(password_dist: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.find_by(password_dist: 'r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==')
User.find_by(password_dist: r4OyDq9hf1EQe9g1RHFrhQIvIIfO3ByOr9HsvTPHaD6xfSw5nfmEiUxhMf2Yd8S425tkyqti37K8aAQR1Zhy5A==)
User
@User
params
continue
params
playlist
:playlist
continue
@playlist
continue
@playlist
playlists_urlname
test
exit
User.count
User.find(6)
